#!/bin/sh
# Start/stop/restart/enable/disable plex.

CONFIG_FILE=/boot/config/plugins/plexmediaserver/exportsettings

plex_start() {
	logger -t pms  "Starting Plex..."
	if [ "$ENABLED" != "true" ]; then
		logger -t pms  "Plex Media Server is not enabled"
		exit 1
	fi

  su $RUNAS -s /bin/bash -c "cd '$PLEX_MEDIA_SERVER_HOME'; ./Plex\ Media\ Server > /dev/null 2>&1 &"

  sleep 2

	for i in {1..5}; do
		if [ ! -e "$PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR/Plex Media Server/plexmediaserver.pid" ]; then
			logger -t pms  "Check $i: Plex has NOT started yet, something is maybe wrong!"
  		sleep 3
  	else
			logger -t pms  "Plex Media Server IS running"
			break
		fi
  done
}

plex_stop(){
	logger -t pms  "Stopping Plex..."
	sleep 0.5
	if [ -e "$PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR/Plex Media Server/plexmediaserver.pid" ]; then
    kill -INT $(cat "$PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR/Plex Media Server/plexmediaserver.pid")
  fi

	sleep 2

	pgrep -u unraid-plex -f Plex > /dev/null

	if [ $? -eq 0 ]; then
		sleep 5
		pgrep -u unraid-plex -f Plex > /dev/null
		if [ $? -eq 0 ]; then
			plex_forcestop
		fi
	fi
}

plex_forcestop(){
	logger -t pms "Stopping Plex ... forced!"
	pkill -9 -u $RUNAS -f Plex
	sleep 5
	rm -f "$PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR/Plex Media Server/plexmediaserver.pid"
}

plex_version(){
	su $RUNAS -s /bin/bash -c "cd '$PLEX_MEDIA_SERVER_HOME'; ./Plex\ Media\ Server --version"
}

plex_check_dirs(){
	if [ ! -d "$PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR" ]; then
		logger -t pms  "$PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR doesn't exist creating it"
		mkdir -p "$PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR"
	fi

	#Check if current runas user is owner of $PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR
	LIB_OWNER=$(stat -c %U "$PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR")
	if [ "$LIB_OWNER" != "$RUNAS" ]; then
		logger -t pms  "Plex Media Server: changing owner of $PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR from $LIB_OWNER to $RUNAS"
		chown -R $RUNAS:users "$PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR"
	fi

	if [ ! -d "$PLEX_MEDIA_SERVER_TMPDIR" ]; then
		logger -t pms  "$PLEX_MEDIA_SERVER_TMPDIR doesn't exist creating it"
		mkdir -p "$PLEX_MEDIA_SERVER_TMPDIR"
	fi

	#Check if current runas user is owner of $PLEX_MEDIA_SERVER_TMPDIR
	TMP_OWNER=$(stat -c %U "$PLEX_MEDIA_SERVER_TMPDIR")
	if  [ "$(readlink -f "$PLEX_MEDIA_SERVER_TMPDIR")" != "/tmp" ] && [ "$TMP_OWNER" != "$RUNAS" ]; then
		logger -t pms  "Plex Media Server: changing owner of $PLEX_MEDIA_SERVER_TMPDIR from $TMP_OWNER to $RUNAS"
		chown -R $RUNAS:users "$PLEX_MEDIA_SERVER_TMPDIR"
	fi
}

# read the configuration files

if [ -f $CONFIG_FILE ]; then
	. $CONFIG_FILE
else
	logger -t pms "NO configfile ($CONFIG_FILE) found: FATAL ERROR"
	exit 1
fi

case "$1" in
	'start')
		plex_check_dirs
  	plex_start
  ;;

  'stop')
  	plex_stop
  ;;

  'forcestop')
    plex_forcestop
  ;;

  'restart')
    plex_stop
    sleep 1
    plex_start
  ;;

  'version')
    plex_version
  ;;

	*)
    echo "usage $0 start|stop|forcestop|restart|version"
esac
